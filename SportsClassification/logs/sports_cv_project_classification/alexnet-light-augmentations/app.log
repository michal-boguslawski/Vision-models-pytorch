2025-09-11 09:49:44,838 | INFO | S3 bucket computer-vision-models-pytorch-bucket exists.
2025-09-11 09:49:44,981 | INFO | DynamoDB table computer-vision-models-config-table exists.
2025-09-11 09:49:45,063 | INFO | Global seed set to 42
2025-09-11 09:49:45,104 | INFO | Added item to DynamoDB table: dynamodb.Table(name='computer-vision-models-config-table')
2025-09-11 10:07:42,162 | INFO | S3 bucket computer-vision-models-pytorch-bucket exists.
2025-09-11 10:07:42,344 | INFO | DynamoDB table computer-vision-models-config-table exists.
2025-09-11 10:07:42,348 | INFO | Global seed set to 42
2025-09-11 10:07:42,385 | INFO | Added item to DynamoDB table: dynamodb.Table(name='computer-vision-models-config-table')
2025-09-11 10:07:43,110 | INFO | Training started...
2025-09-11 10:07:43,110 | INFO | BuildModel(
  (backbone): AlexNet(
    (features): Sequential(
      (0): Conv2d(3, 96, kernel_size=(11, 11), stride=(4, 4))
      (1): ReLU(inplace=True)
      (2): LocalResponseNorm(5, alpha=0.0001, beta=0.75, k=2)
      (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(96, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
      (5): ReLU(inplace=True)
      (6): LocalResponseNorm(5, alpha=0.0001, beta=0.75, k=2)
      (7): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(256, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (9): ReLU(inplace=True)
      (10): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (11): ReLU(inplace=True)
      (12): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (13): ReLU(inplace=True)
      (14): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
  )
  (detecton_head): DoubleLinearHead(
    (classifier): Sequential(
      (0): Flatten(start_dim=1, end_dim=-1)
      (1): Linear(in_features=6400, out_features=4096, bias=True)
      (2): ReLU(inplace=True)
      (3): Dropout(p=0.5, inplace=False)
      (4): Linear(in_features=4096, out_features=4096, bias=True)
      (5): ReLU(inplace=True)
      (6): Dropout(p=0.5, inplace=False)
      (7): Linear(in_features=4096, out_features=100, bias=True)
    )
  )
)
2025-09-11 10:09:27,148 | INFO | S3 bucket computer-vision-models-pytorch-bucket exists.
2025-09-11 10:09:27,287 | INFO | DynamoDB table computer-vision-models-config-table exists.
2025-09-11 10:09:27,293 | INFO | Global seed set to 42
2025-09-11 10:09:27,378 | INFO | Added item to DynamoDB table: dynamodb.Table(name='computer-vision-models-config-table')
2025-09-11 10:09:28,072 | INFO | Training started...
2025-09-11 10:09:28,073 | INFO | BuildModel(
  (backbone): AlexNet(
    (features): Sequential(
      (0): Conv2d(3, 96, kernel_size=(11, 11), stride=(4, 4))
      (1): ReLU(inplace=True)
      (2): LocalResponseNorm(5, alpha=0.0001, beta=0.75, k=2)
      (3): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
      (4): Conv2d(96, 256, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
      (5): ReLU(inplace=True)
      (6): LocalResponseNorm(5, alpha=0.0001, beta=0.75, k=2)
      (7): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
      (8): Conv2d(256, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (9): ReLU(inplace=True)
      (10): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (11): ReLU(inplace=True)
      (12): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (13): ReLU(inplace=True)
      (14): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
  )
  (detecton_head): DoubleLinearHead(
    (classifier): Sequential(
      (0): Flatten(start_dim=1, end_dim=-1)
      (1): Linear(in_features=6400, out_features=4096, bias=True)
      (2): ReLU(inplace=True)
      (3): Dropout(p=0.5, inplace=False)
      (4): Linear(in_features=4096, out_features=4096, bias=True)
      (5): ReLU(inplace=True)
      (6): Dropout(p=0.5, inplace=False)
      (7): Linear(in_features=4096, out_features=100, bias=True)
    )
  )
)
